{
  "name": "deep-debugger",
  "displayName": "Deep Debugger",
  "version": "0.46.7",
  "publisher": "andreweinand",
  "description": "Starter extension for developing debug adapters for VS Code.",
  "author": {
    "name": "Microsoft Corporation",
    "email": "aweinand@microsoft.com"
  },
  "license": "MIT",
  "keywords": [
    "multi-root ready"
  ],
  "engines": {
    "vscode": "^1.59.0"
  },
  "icon": "images/mock-debug-icon.png",
  "categories": [
    "Debuggers"
  ],
  "private": true,
  "repository": {
    "type": "git",
    "url": "https://github.com/Microsoft/vscode-mock-debug.git"
  },
  "bugs": {
    "url": "https://github.com/Microsoft/vscode-mock-debug/issues"
  },
  "scripts": {
    "vscode:prepublish": "yarn run package-ext && yarn run package-web",
    "compile": "tsc -p ./",
    "lint": "eslint src --ext ts",
    "watch": "webpack --watch --devtool nosources-source-map --info-verbosity verbose --config ./build/extension.webpack.config.js",
    "watch2": "tsc -watch -p ./",
    "pretest": "yarn run compile && yarn run lint",
    "test": "node ./out/test/runTest.js",
    "package": "vsce package",
    "publish": "vsce publish",
    "package-ext": "webpack --mode production --config ./build/extension.webpack.config.js",
    "compile-web": "webpack --devtool nosources-source-map --config ./build/web-extension.webpack.config.js",
    "watch-web": "webpack --watch --devtool nosources-source-map --info-verbosity verbose --config ./build/web-extension.webpack.config.js",
    "package-web": "webpack --mode production --config ./build/web-extension.webpack.config.js"
  },
  "dependencies": {
    "await-notify": "1.0.1",
    "vscode-debugadapter": "^1.49.0"
  },
  "devDependencies": {
    "@types/vscode": "^1.59.0",
    "@types/glob": "^7.1.4",
    "@types/mocha": "^9.0.0",
    "@types/node": "^14.14.37",
    "eslint": "^7.32.0",
    "@typescript-eslint/eslint-plugin": "^4.29.3",
    "@typescript-eslint/parser": "^4.29.3",
    "glob": "^7.1.7",
    "mocha": "^9.1.0",
    "typescript": "^4.3.5",
    "vscode-debugadapter-testsupport": "^1.49.0",
    "vsce": "^1.96.1",
    "ts-loader": "^8.1.0",
    "webpack": "^4.46.0",
    "webpack-cli": "^3.3.12"
  },
  "main": "./dist/ext/extension.js",
  "browser": "./dist/web/extension.js",
  "activationEvents": [
    "onDebugResolve:deepdbg",
    "onDebugDynamicConfigurations:deepdbg",
    "onCommand:extension.deep-debugger.getProgramName",
    "onCommand:extension.deep-debugger.runEditorContents",
    "onCommand:extension.deep-debugger.debugEditorContents"
  ],
  "workspaceTrust": {
    "request": "never"
  },
  "contributes": {
    "menus": {
      "editor/title/run": [
        {
          "command": "extension.deep-debugger.runEditorContents",
          "when": "resourceLangId == markdown"
        },
        {
          "command": "extension.deep-debugger.debugEditorContents",
          "when": "resourceLangId == markdown"
        }
      ],
      "commandPalette": [
        {
          "command": "extension.deep-debugger.debugEditorContents",
          "when": "resourceLangId == markdown"
        },
        {
          "command": "extension.deep-debugger.runEditorContents",
          "when": "resourceLangId == markdown"
        }
      ],
      "debug/variables/context": [
        {
          "command": "extension.deep-debugger.toggleFormatting",
          "when": "debugType == 'deepdbg' && debugProtocolVariableMenuContext == 'simple'"
        }
      ]
    },
    "commands": [
      {
        "command": "extension.deep-debugger.debugEditorContents",
        "title": "Debug File",
        "category": "Deep Debugger",
        "enablement": "!inDebugMode",
        "icon": "$(debug-alt)"
      },
      {
        "command": "extension.deep-debugger.runEditorContents",
        "title": "Run File",
        "category": "Deep Debugger",
        "enablement": "!inDebugMode",
        "icon": "$(play)"
      },
      {
        "command": "extension.deep-debugger.toggleFormatting",
        "title": "Toggle between decimal and hex formatting"
      }
    ],
    "breakpoints": [
      {
        "language": "markdown"
      }
    ],
    "debuggers": [
      {
        "type": "deepdbg",
        "languages": ["markdown"],
        "label": "Deep Debugger",
        "program": "./out/debugAdapter.js",
        "runtime": "node",
        "configurationAttributes": {
          "launch": {
            "required": [
              "program"
            ],
            "properties": {
              "program": {
                "type": "string",
                "description": "Absolute path to a text file.",
                "default": "${workspaceFolder}/${command:AskForProgramName}"
              },
              "stopOnEntry": {
                "type": "boolean",
                "description": "Automatically stop after launch.",
                "default": true
              },
              "trace": {
                "type": "boolean",
                "description": "Enable logging of the Debug Adapter Protocol.",
                "default": true
              },
              "compileError": {
                "type": "string",
                "description": "Simulates a compile error in 'launch' request.",
								"enum": [
									"default",
									"show",
									"hide"
								],
								"enumDescriptions": [
                  "default: show fake compile error to user",
									"show fake compile error to user",
									"do not show fake compile error to user"
								]
              }
            }
          }
        },
        "initialConfigurations": [
          {
            "type": "deepdbg",
            "request": "launch",
            "name": "Ask for file name",
            "program": "${workspaceFolder}/${command:AskForProgramName}",
            "stopOnEntry": true
          }
        ],
        "configurationSnippets": [
          {
            "label": "Mock Debug: Launch",
            "description": "A new configuration for 'debugging' a user selected markdown file.",
            "body": {
              "type": "deepdbg",
              "request": "launch",
              "name": "Ask for file name",
              "program": "^\"\\${workspaceFolder}/\\${command:AskForProgramName}\"",
              "stopOnEntry": true
            }
          }
        ],
        "variables": {
          "AskForProgramName": "extension.deep-debugger.getProgramName"
        }
      }
    ]
  }
}